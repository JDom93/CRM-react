{"ast":null,"code":"import React from'react';var SearchSuggestions=function SearchSuggestions(_ref){var filters=_ref.filters,findMusic=_ref.findMusic,setQuery=_ref.setQuery;if(!filters){console.log('no filters');return null;}var Alben=filters.Alben,Instrument=filters.Instrument,Keyword=filters.Keyword,ProductionType=filters.ProductionType,Style=filters.Style;// Only display fields if there are suggestions present\n// Limited to 15 items per filter\nreturn/*#__PURE__*/React.createElement(\"div\",{id:\"suggestions\",className:\"search-suggestions\"},Keyword&&Keyword.length!=0&&/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion\",id:\"keywords\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Keywords\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"list-keywords\"},Keyword.slice(0,15).map(function(keyword){return/*#__PURE__*/React.createElement(\"li\",{className:\"suggestion-item\",key:keyword,onClick:function onClick(e){findMusic(e,e.target.textContent);setQuery(e.target.textContent);}},keyword);}))),Alben&&Alben.length!=0&&/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion\",id:\"albums\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Albums\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"list-albums\"},Alben.slice(0,15).map(function(album){return/*#__PURE__*/React.createElement(\"li\",{className:\"suggestion-item\",key:album,onClick:function onClick(e){findMusic(e,e.target.textContent);setQuery(e.target.textContent);}},album);}))),Instrument&&Instrument.length!=0&&/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion\",id:\"instruments\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Instruments\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"list-instruments\"},Instrument.slice(0,15).map(function(inst){return/*#__PURE__*/React.createElement(\"li\",{className:\"suggestion-item\",key:inst,onClick:function onClick(e){findMusic(e,e.target.textContent);setQuery(e.target.textContent);}},inst);}))),Style&&Style.length!=0&&/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion\",id:\"styles\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Styles\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"list-styles\"},Style.slice(0,15).map(function(style){return/*#__PURE__*/React.createElement(\"li\",{className:\"suggestion-item\",key:style,onClick:function onClick(e){findMusic(e,e.target.textContent);setQuery(e.target.textContent);}},style);}))),ProductionType&&ProductionType.length!=0&&/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion\",id:\"production\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Production\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"list-productions\"},ProductionType.slice(0,15).map(function(prod){return/*#__PURE__*/React.createElement(\"li\",{className:\"suggestion-item\",key:prod,onClick:function onClick(e){findMusic(e,e.target.textContent);setQuery(e.target.textContent);}},prod);}))));};export default SearchSuggestions;","map":{"version":3,"sources":["/Users/JulianDomke/dev_projects/crm-react/src/Components/SearchSuggestions.js"],"names":["React","SearchSuggestions","filters","findMusic","setQuery","console","log","Alben","Instrument","Keyword","ProductionType","Style","length","slice","map","keyword","e","target","textContent","album","inst","style","prod"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchSuggestions = ({ filters, findMusic, setQuery }) => {\n    if (!filters) {\n        console.log('no filters');\n        return null;\n    }\n\n    const { Alben, Instrument, Keyword, ProductionType, Style } = filters;\n\n    // Only display fields if there are suggestions present\n    // Limited to 15 items per filter\n    return (\n        <div id=\"suggestions\" className=\"search-suggestions\">\n            {/* Alben */}\n            {Keyword && Keyword.length != 0 && (\n                <div className=\"suggestion\" id=\"keywords\">\n                    <h3>Keywords</h3>\n                    <ul id=\"list-keywords\">\n                        {Keyword.slice(0, 15).map(keyword => (\n                            <li\n                                className=\"suggestion-item\"\n                                key={keyword}\n                                onClick={e => {\n                                    findMusic(e, e.target.textContent);\n                                    setQuery(e.target.textContent);\n                                }}\n                            >\n                                {keyword}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            {/* Albums */}\n            {Alben && Alben.length != 0 && (\n                <div className=\"suggestion\" id=\"albums\">\n                    <h3>Albums</h3>\n                    <ul id=\"list-albums\">\n                        {Alben.slice(0, 15).map(album => (\n                            <li\n                                className=\"suggestion-item\"\n                                key={album}\n                                onClick={e => {\n                                    findMusic(e, e.target.textContent);\n                                    setQuery(e.target.textContent);\n                                }}\n                            >\n                                {album}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            {/* Instruments */}\n            {Instrument && Instrument.length != 0 && (\n                <div className=\"suggestion\" id=\"instruments\">\n                    <h3>Instruments</h3>\n                    <ul id=\"list-instruments\">\n                        {Instrument.slice(0, 15).map(inst => (\n                            <li\n                                className=\"suggestion-item\"\n                                key={inst}\n                                onClick={e => {\n                                    findMusic(e, e.target.textContent);\n                                    setQuery(e.target.textContent);\n                                }}\n                            >\n                                {inst}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            {Style && Style.length != 0 && (\n                <div className=\"suggestion\" id=\"styles\">\n                    <h3>Styles</h3>\n                    <ul id=\"list-styles\">\n                        {Style.slice(0, 15).map(style => (\n                            <li\n                                className=\"suggestion-item\"\n                                key={style}\n                                onClick={e => {\n                                    findMusic(e, e.target.textContent);\n                                    setQuery(e.target.textContent);\n                                }}\n                            >\n                                {style}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            {ProductionType && ProductionType.length != 0 && (\n                <div className=\"suggestion\" id=\"production\">\n                    <h3>Production</h3>\n                    <ul id=\"list-productions\">\n                        {ProductionType.slice(0, 15).map(prod => (\n                            <li\n                                className=\"suggestion-item\"\n                                key={prod}\n                                onClick={e => {\n                                    findMusic(e, e.target.textContent);\n                                    setQuery(e.target.textContent);\n                                }}\n                            >\n                                {prod}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nSearchSuggestions.propTypes = {\n    Alben: PropTypes.array,\n    Instrument: PropTypes.array,\n    Keyword: PropTypes.array,\n    ProductionType: PropTypes.array,\n    Style: PropTypes.array,\n};\n\nexport default SearchSuggestions;\n"]},"metadata":{},"sourceType":"module"}